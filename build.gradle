buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'pl.allegro.tech.build.axion-release' version '1.10.2'
    id 'maven-publish'
}

group = 'pl.touk.krush'
project.version = scmVersion.version

sourceCompatibility = 1.8

scmVersion {
    tag {
        prefix = 'krush'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

configure([project(':annotation-processor'), project(':runtime'), project(':runtime-postgresql')]) {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
    }

    def snapshot = scmVersion.version.endsWith('SNAPSHOT')

    tasks.withType(Sign) {
        onlyIf { !snapshot }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                groupId rootProject.group
                artifactId "krush-${project.name}"
                version rootProject.version

                artifact sourcesJar {
                    classifier "sources"
                }
            }
        }

        repositories {
            maven {
                credentials {
                    username = System.getenv("SONATYPE_USERNAME")
                    password = System.getenv("SONATYPE_PASSWORD")
                }
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = snapshot ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }

    signing {
        useInMemoryPgpKeys(System.getenv('SIGNING_PRIVATE_KEY'), System.getenv('SIGNING_PASSWORD'))
        sign publishing.publications.mavenJava
    }

}
